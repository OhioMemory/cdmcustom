// Logo action
/*(function () {
	function startEventListenerCollections(cdmEvent) {
		document.addEventListener(cdmEvent, function(e){

			if (document.querySelectorAll('.Header-logoHolder div a').length > 0) {
				document.querySelectorAll('.Header-logoHolder div a')[0].addEventListener("click", function(){

					var keysHomeLinks = ["p16007coll88", "p16007coll31", "p16007coll33", "p16007coll77", "p267401coll14", "p267401coll15", "p267401coll16", "p267401coll17", "p267401coll18", "p267401coll19", "p267401coll20", "p267401coll21", "p267401coll22", "p267401coll13", "p267401coll23", "p267401coll24", "p267401coll25", "p267401coll26", "p267401coll27", "p267401coll28", "p267401coll29"];

					if ( keysHomeLinks.join().indexOf(e.detail.collectionId) > -1 ) {
						console.log(keysHomeLinks.join().indexOf(e.detail.collectionId) > -1);
						if (e.detail.collectionId.indexOf('267401') > -1 ) {
							console.log(e.detail.collectionId.indexOf('267401') > -1);
							location.href = "https://www.harriselmorelibrary.org/local-history-genealogy";
						}
						if (e.detail.collectionId.indexOf('16007') > -1 ) {
							location.href = "http://www.toledolibrary.org/digitalcollections";
						}
					} 

				});
			}
		});
	}

	function startEventListenerDefault(cdmEvent) {
		document.addEventListener(cdmEvent, function(e){
			if (document.querySelectorAll('.Header-logoHolder div a').length > 0) {
				document.querySelectorAll('.Header-logoHolder div a')[0].addEventListener("click", function(){
					location.href = 'https://ohiomemory.org/digital';
				});
			}
		});
	}

	var cdmCollectionEvents = ['cdm-collection-landing-page:ready', 'cdm-collection-landing-page:update', 'cdm-collection-page:ready', 'cdm-collection-page:update', 'cdm-collection-search-page:ready', 'cdm-collection-search-page:update'];

	cdmCollectionEvents.forEach(startEventListenerCollections);

	var allOtherEvents = ['cdm-search-page:ready', 'cdm-search-page:update', 'cdm-custom-page:ready', 'cdm-custom-page:update']

	allOtherEvents.forEach(startEventListenerDefault);

})();*/


// if advanced search were active, this would allow for near5
document.addEventListener('cdm-advanced-search-page:ready', function(e){

	var newOption = document.createElement("option");
	newOption.setAttribute('id', 'nearOp');
	newOption.value = "near5";
	newOption.innerText = "Within 5 words";
	document.getElementsByClassName('form-control')[2].appendChild(newOption);

	document.getElementsByClassName("cdm-btn btn btn-primary btn-block")[1].addEventListener("click", function(){

		if ( document.getElementsByClassName('form-control')[2].value.match(/near5/) ) {
			window.location.href = 'https://www.ohiomemory.org/digital/search/searchterm/' + document.getElementsByClassName('form-control')[1].value.split(" ").join(' near5 ') + '/field/all/mode/exact/conn/and';
			e.stopPropagation();
		}
	});
	
});
document.addEventListener('cdm-advanced-search-page:update', function(e){
	// e is instance of CustomEvent
	// a page was updated
	//console.log(e);
	//console.log("cdm-advanced-search-page:update");
	//console.log(e);
	document.getElementsByClassName("SimpleSearch-headerAdvancedSearchButtonLink")[0].addEventListener("click", function(e){
		console.log("cdm-advanced-search-page:update");
		//if( !!document.getElementById("advancedSearchDiv") ) { history.back(1); e.stopPropagation(); }
	});

});
document.addEventListener('cdm-advanced-search-page:leave', function(e){
	// e is instance of CustomEvent
	// ...
	// http://www.ohiomemory.org/digital/collection/addresses/search/searchterm/water%20near5%20pollution/field/all/mode/exact/conn/and
	
	
	//console.log(e);
});



// create element function
/*const elFactory = (type, attributes, ...children) => {
	const el = document.createElement(type)
	for (key in attributes) {
		el.setAttribute(key, attributes[key])
	}
	children.forEach(child => {
		if (typeof child === 'string') {
			el.appendChild(document.createTextNode(child))
		} else {
			el.appendChild(child)
		}
	})
	return el
}*/

// Mirador modification to compensate for IE
if (!Array.from) {
  Array.from = (function () {
    var toStr = Object.prototype.toString;
    var isCallable = function (fn) {
      return typeof fn === 'function' || toStr.call(fn) === '[object Function]';
    };
    var toInteger = function (value) {
      var number = Number(value);
      if (isNaN(number)) { return 0; }
      if (number === 0 || !isFinite(number)) { return number; }
      return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));
    };
    var maxSafeInteger = Math.pow(2, 53) - 1;
    var toLength = function (value) {
      var len = toInteger(value);
      return Math.min(Math.max(len, 0), maxSafeInteger);
    };

    // The length property of the from method is 1.
    return function from(arrayLike/*, mapFn, thisArg */) {
      // 1. Let C be the this value.
      var C = this;

      // 2. Let items be ToObject(arrayLike).
      var items = Object(arrayLike);

      // 3. ReturnIfAbrupt(items).
      if (arrayLike == null) {
        throw new TypeError("Array.from requires an array-like object - not null or undefined");
      }

      // 4. If mapfn is undefined, then let mapping be false.
      var mapFn = arguments.length > 1 ? arguments[1] : void undefined;
      var T;
      if (typeof mapFn !== 'undefined') {
        // 5. else
        // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.
        if (!isCallable(mapFn)) {
          throw new TypeError('Array.from: when provided, the second argument must be a function');
        }

        // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.
        if (arguments.length > 2) {
          T = arguments[2];
        }
      }

      // 10. Let lenValue be Get(items, "length").
      // 11. Let len be ToLength(lenValue).
      var len = toLength(items.length);

      // 13. If IsConstructor(C) is true, then
      // 13. a. Let A be the result of calling the [[Construct]] internal method of C with an argument list containing the single item len.
      // 14. a. Else, Let A be ArrayCreate(len).
      var A = isCallable(C) ? Object(new C(len)) : new Array(len);

      // 16. Let k be 0.
      var k = 0;
      // 17. Repeat, while k < lenâ€¦ (also steps a - h)
      var kValue;
      while (k < len) {
        kValue = items[k];
        if (mapFn) {
          A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);
        } else {
          A[k] = kValue;
        }
        k += 1;
      }
      // 18. Let putStatus be Put(A, "length", len, true).
      A.length = len;
      // 20. Return A.
      return A;
    };
  }());
}


/**
 * This could be the way a supercollection search work, where branding and search criteria are maintained across pages
 */
/*document.addEventListener('cdm-search-page:ready', function(e){
	
	if (document.getElementsByClassName('BackToResults-backLink')[0] != undefined) {
		if (document.getElementsByClassName('BackToResults-backLink')[0].firstChild.getAttribute("href").match(/!newspapers/) != null && document.getElementsByClassName('BackToResults-backLink')[0].firstChild.getAttribute("href").match(/!newspapers/).length > 0) {
			document.getElementsByClassName('Header-titleText')[0].innerHTML = "Ohio Memory Newspapers";
			document.getElementsByClassName('Header-titleText')[0].classList.add("showTitle");
		}
	}

	var facetNodes = document.getElementsByClassName("panel-title");
	for (i=1; i<facetNodes.length; i++) {
		if (facetNodes[i].firstChild.getAttribute("aria-label").includes("close")) {
			facetNodes[i].firstChild.click();
		}
	}
});*/

// some kind of sub / super collection search
/*(function () {
	if (document.getElementsByClassName('BackToResults-backLink')[0] != undefined) {
		if (document.getElementsByClassName('BackToResults-backLink')[0].firstChild.getAttribute("href").match(/!newspapers/) != null && document.getElementsByClassName('BackToResults-backLink')[0].firstChild.getAttribute("href").match(/!newspapers/).length > 0) {
			document.getElementsByClassName('Header-titleText')[0].innerHTML = "Ohio Memory Newspapers";
			document.getElementsByClassName('Header-titleText')[0].classList.add("showTitle");
		}
	}
})();*/




/*
// compound object item view
(function () {

	function startEventListener(cdmEvent) {

		document.addEventListener(cdmEvent, function (e) {

			if (e.detail.collectionId == 'p15005coll5') {
				
				var pageViewContainers = document.querySelectorAll('#pageView');
				for (var i = 0; i < pageViewContainers.length; ++i) {
				  pageViewContainers[i].remove();
				} 
				if (document.querySelectorAll('#pageView').length < 1) { 
					var pageViewElem = document.createElement('div');
					var att = document.createAttribute("id");
					att.value = "pageView";
					pageViewElem.setAttributeNode(att); 
					var linkText = document.createTextNode("View all pages");
					pageViewElem.appendChild(linkText);
					var viewNode = document.getElementsByClassName("ItemView-itemSearchContainer")[1].insertBefore(pageViewElem, document.getElementsByClassName("ItemSearch-itemSearchControl")[1]);
				}

				viewNode.addEventListener("click", function(event){
					if (document.getElementById("pageView").innerText == "View all pages") {

						document.getElementsByClassName("fa-times-circle")[1].click();
						document.getElementById("pageView").innerText = "View relevant pages";
						console.log(event);
						console.log('Ready: View relevant pages');
						document.getElementsByClassName("ItemSearch-itemSearchInputControl")[1].value = 'infantry';
						document.getElementsByClassName("ItemSearch-itemHeaderButtonPadding")[2].addEventListener("click", function(event){
							console.log(event);
							console.log('Ready: View all pages');
							document.getElementsByClassName("ItemSearch-itemHeaderButtonPadding")[2].click();
							document.getElementById("pageView").innerText = "View all pages";
						});
						
					} else {
						document.getElementsByClassName("ItemSearch-itemSearchInputControl")[1].value = 'infantry';
						document.getElementsByClassName("ItemSearch-itemHeaderButtonPadding")[2].addEventListener("click", function(event){
							console.log(event);
							console.log('Ready: View all pages');
							document.getElementsByClassName("ItemSearch-itemHeaderButtonPadding")[2].click();
							document.getElementById("pageView").innerText = "View all pages";
						});
					}
				});

	    	}
	    });
	}
	
	var cdmEvents = ['cdm-item-page:ready', 'cdm-item-page:update'];

	cdmEvents.forEach(startEventListener);

})();
*/